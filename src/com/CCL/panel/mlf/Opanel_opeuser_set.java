/*
 * Opanel_opeuser_set.java
 *
 * Created on __DATE__, __TIME__
 */

package com.CCL.panel.mlf;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import com.CCL.Dao.OpeUserDao;
import com.CCL.Dao.OpeperDao;
import com.CCL.Dao.impl.OpeUserDaoImpl;
import com.CCL.Dao.impl.OpeperDaoImpl;
import com.CCL.beans.Bicycle;
import com.CCL.beans.OpeUser;
import com.CCL.beans.Opeper;
import com.CCL.service.mlf.opeper_service;
import com.CCL.util.mlf.PublicDate;

/**
 *
 * @author  __USER__
 */
public class Opanel_opeuser_set extends javax.swing.JPanel {
    
	/** Creates new form Opanel_opeuser_set */
	private OpeUserDao opdao;
	private OpeperDao opedao;
	private Opeper  opeper;
	private opeper_service opservice;
	private javax.swing.JButton btn_add;
	private javax.swing.JButton btn_del;
	private javax.swing.JButton btn_return;
//	private javax.swing.JButton btn_save;
	private javax.swing.JButton btn_update;
	private javax.swing.JScrollPane jscp_operinfo;
	private javax.swing.JLabel lbl_id;
	private javax.swing.JLabel lbl_opename;
	private javax.swing.JLabel lbl_pwd;
	private javax.swing.JLabel lbl_tip;
	private javax.swing.JTable tab_operinfo;
	private javax.swing.JTextField txt_id;
	private javax.swing.JTextField txt_opename;
	private javax.swing.JTextField txt_pwd;
	private  static OpeUser  opuser;
	private JPanel pnl;
	private JTextField txt_tip;
	public Opanel_opeuser_set() {
		
		initComponents();
//		if(PublicDate.getOuser().getName().equals("admin"))
//		{
//		initComponents();
//		}
//		else{
//            opeper_tip();
//		}
	}



//	private void opeper_tip() {
//		// TODO Auto-generated method stub
//		pnl=new JPanel(null);
//		txt_tip=new JTextField("该用户无此功能权限！！");
//		init();
//	}
//	private void init() {
//		txt_tip.setBounds(250, 250, 100, 100);
//		
//		pnl.add(txt_tip);
//		this.add(pnl);
//		this.setSize(800, 600);
//		this.setVisible(true);
//	}



	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		opedao=new OpeperDaoImpl();
		opeper=new Opeper();
		opdao=new OpeUserDaoImpl();
		opservice=new opeper_service();
		lbl_tip = new javax.swing.JLabel();
		lbl_id = new javax.swing.JLabel();
		lbl_opename = new javax.swing.JLabel();
		lbl_pwd = new javax.swing.JLabel();
		btn_return = new javax.swing.JButton();
		btn_add = new javax.swing.JButton();
		btn_update = new javax.swing.JButton();
		btn_del = new javax.swing.JButton();
//		btn_save = new javax.swing.JButton();
		txt_pwd = new javax.swing.JTextField();
		txt_id = new javax.swing.JTextField();
		txt_opename = new javax.swing.JTextField();
		jscp_operinfo = new javax.swing.JScrollPane();
		tab_operinfo = new javax.swing.JTable()
		{

			@Override
			public boolean isCellEditable(int row, int column) {
				// TODO Auto-generated method stub
				return false;
			}
			
		};
        setTableDate(opdao.queryAll());//读取数据库填入表格中
        tab_operinfo.addMouseListener(new MouseAdapter() {
        	
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		if(e.getClickCount()==2)
        		{
        			getTabledate(e);
        		}
        	}
           
		});
		
       
		
		setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

		lbl_tip.setFont(new java.awt.Font("Microsoft YaHei UI", 3, 18));
		lbl_tip.setForeground(new java.awt.Color(51, 0, 255));
		lbl_tip.setText("\u64cd\u4f5c\u8bb0\u8d26\u5458\u7ba1\u7406");
		add(lbl_tip, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0,
				160, 50));

		lbl_id.setText("ID:");
		add(lbl_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140,
				-1, -1));

		lbl_opename.setText("\u7ba1\u7406\u5458\u540d:");
		add(lbl_opename, new org.netbeans.lib.awtextra.AbsoluteConstraints(290,
				140, -1, -1));

		lbl_pwd.setText("\u5bc6\u7801:");
		add(lbl_pwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180,
				-1, -1));

		btn_return.setText("\u9000\u51fa");
		add(btn_return, new org.netbeans.lib.awtextra.AbsoluteConstraints(590,
				70, -1, -1));
		
		
		btn_return.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				   //返回
				
			}
		});

		
		
		btn_add.setText("\u65b0\u589e");
		add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70,
				-1, -1));
		
		
		
		btn_add.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				btn_add_mouseAction(e);
				
			}
		});

		
		
		btn_update.setText("\u4fee\u6539");
		add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(190,
				70, -1, -1));
		
		btn_update.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				btn_update_mouseAction(e);
			}
		});
		btn_del.setText("\u5220\u9664");
		add(btn_del, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70,
				-1, -1));
		btn_del.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				btn_del_mouseAction(e);
			}
		});
//		btn_save.setText("\u4fdd\u5b58");
//		add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(460,
//				70, -1, -1));

		txt_pwd.setText(" ");
		add(txt_pwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(130,
				180, 100, -1));

		txt_id.setText(" ");
		add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140,
				100, -1));
        txt_id.setEditable(false);
		txt_opename.setText(" ");
		add(txt_opename, new org.netbeans.lib.awtextra.AbsoluteConstraints(360,
				140, 100, -1));
		
		
		
		jscp_operinfo.setViewportView(tab_operinfo);

		add(jscp_operinfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0,
				210, 760, 380));

	}// </editor-fold>
	

	protected void btn_del_mouseAction(MouseEvent e) {
		 if(txt_id.getText().trim().length()==0)
			   {
				   JOptionPane.showMessageDialog(null, "id不能为空,请双击要删除的信息");
				   txt_opename.removeAll();
				   txt_pwd.removeAll();
				   
			   }else{
		        int id=Integer.parseInt(txt_id.getText().trim());
		        opdao.remove(id);
		        setTableDate(opdao.queryAll());
		        txt_id.setText("");
	      		txt_opename.setText("");
				txt_pwd.setText("");
			   }
	}

	protected void btn_update_mouseAction(MouseEvent e) {
		if(txt_id.getText().trim().length()<=0)
		{
			JOptionPane.showMessageDialog(null, "请先双击所需修改的管理员信息");
		}
		else{
            int id=Integer.parseInt(txt_id.getText().trim());             
      		String opename=(String)txt_opename.getText().trim();
      		String pwd=(String)txt_pwd.getText().trim();
      		OpeUser os=opdao.get(id);
      		os.setUser(opename);
      		os.setPassword(pwd);
      		opdao.update(os);
      		setTableDate(opdao.queryAll());
      		txt_id.setText("");
      		txt_opename.setText("");
			txt_pwd.setText("");
		}
	}

	private void getTabledate(MouseEvent e) {
		int row=tab_operinfo.getSelectedRow();
		if(row!=-1)
		{
		int column=0;
		opuser=(OpeUser) tab_operinfo.getValueAt(row, column);
		txt_id.setText(opuser.getId()+"");
		txt_opename.setText(opuser.getUserName());
		txt_pwd.setText(opuser.getPassword());
		}
	}

	
	
	protected void btn_add_mouseAction(MouseEvent e) {
		  
		
//		   if(txt_id.getText().trim().length()==0)
//		   {
//			   JOptionPane.showMessageDialog(null, "id不能为空");
//			   txt_opename.removeAll();
//			   txt_pwd.removeAll();
//			   
//		   }else 
//		   {
//			   int id=Integer.parseInt(txt_id.getText().trim());
		if(txt_id.getText().trim().length()!=0)
		{
			JOptionPane.showMessageDialog(null, "此用户ID已存在，请重新输入！");
			txt_id.setText("");
			txt_opename.setText("");
			txt_pwd.setText("");
			
		}else
		{ 
			if(txt_opename.getText().trim().length()==0||txt_pwd.getText().trim().length()==0)
			{
				JOptionPane.showMessageDialog(null, "用户名或密码不能为空！");
			}
			else{
			String opename=(String)txt_opename.getText().trim();
		      String pwd=(String)txt_pwd.getText().trim();
			  OpeUser ouser=new OpeUser();
			   //ouser.setId(id);
			   ouser.setUser(opename);
			   ouser.setPassword(pwd);
			   opdao.add(ouser);
			   setTableDate(opdao.queryAll());
			   OpeUser op=opservice.selectByNameAndPwd(opename, pwd);//设置新管理员的默认权限表；
			   Opeper opp=new Opeper();
			   opp.setOpeUser(op);
			   opedao.add(opp);
			}
		}
			 
//		   }
		
	}

	
	
	private void setTableDate(List<OpeUser> queryAll) {
		Vector<String> title = new Vector<String>();
		title.add("ID");
		title.add("管理员名");
		title.add("密码");


		Vector<Vector> date = new Vector<Vector>();
		Vector row = null;
         
		for (OpeUser b : queryAll) {
			row = new Vector();
			row.add(b);
			row.add(b.getUserName());
			row.add(b.getPassword());
			date.add(row);
		}
		this.tab_operinfo.setModel(new DefaultTableModel(date, title));
		
	}
	//GEN-END:initComponents

	//GEN-BEGIN:variables
	// Variables declaration - do not modify

	// End of variables declaration//GEN-END:variables

}