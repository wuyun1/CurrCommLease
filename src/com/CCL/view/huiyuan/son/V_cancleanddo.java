/*
 * V_cancleanddo.java
 *
 * Created on __DATE__, __TIME__
 */

package com.CCL.view.huiyuan.son;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.border.TitledBorder;

import com.CCL.beans.Customer;
import com.CCL.beans.CustomerState;
import com.CCL.util.DateUtil;
import com.CCL.view.huiyuan.service.CustomerService;
import com.CCL.view.kaitaimgr.subpanel.FindCustomerDialog;

/**
 *
 * @author __USER__
 */
public class V_cancleanddo extends javax.swing.JPanel {

	public V_cancleanddo() {

		initComponents();
	}

	public javax.swing.JList getjList1() {
		return jList1;
	}

	public void setjList1(javax.swing.JList jList1) {
		this.jList1 = jList1;
	}

	public javax.swing.JScrollPane getjScrollPane1() {
		return jScrollPane1;
	}

	public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
		this.jScrollPane1 = jScrollPane1;
	}



	public javax.swing.JButton getJbt_cancle1() {
		return jbt_cancle1;
	}

	public void setJbt_cancle1(javax.swing.JButton jbt_cancle1) {
		this.jbt_cancle1 = jbt_cancle1;
	}



	public javax.swing.JButton getJbt_ok() {
		return jbt_ok;
	}

	public void setJbt_ok(javax.swing.JButton jbt_ok) {
		this.jbt_ok = jbt_ok;
	}

	public javax.swing.JButton getJbt_save() {
		return jbt_save;
	}

	public void setJbt_save(javax.swing.JButton jbt_save) {
		this.jbt_save = jbt_save;
	}

	



	public javax.swing.JLabel getLbl_newpassword() {
		return lbl_newpassword;
	}

	public void setLbl_newpassword(javax.swing.JLabel lbl_newpassword) {
		this.lbl_newpassword = lbl_newpassword;
	}

	public javax.swing.JLabel getLbl_password() {
		return lbl_password;
	}

	public void setLbl_password(javax.swing.JLabel lbl_password) {
		this.lbl_password = lbl_password;
	}



	public javax.swing.JPasswordField getTxt_newpassword() {
		return txt_newpassword;
	}

	public void setTxt_newpassword(javax.swing.JPasswordField txt_newpassword) {
		this.txt_newpassword = txt_newpassword;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		jbt_ok = new javax.swing.JButton();

		jbt_ok.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String name = txt_name.getText();
				String user_id = txt_userId.getText();
				if ("".equals(user_id)) {
					JOptionPane.showMessageDialog(null, "请选择用户!");
					txt_name.setText("");
					txt_userId.setText("");
					return;
				}

				Customer ct = CustomerService.query(user_id);
				if (ct == null) {
					JOptionPane.showMessageDialog(null, "该用户不存在!");
					txt_name.setText("");
					txt_userId.setText("");
					return;
				}
				if (ct.getCustomerState().getName().equals("注销")) {
					JOptionPane.showMessageDialog(null, "此客户已经被注销过！");
					txt_name.setText("");
					txt_userId.setText("");
					return;
				} else {

					DefaultListModel model = new DefaultListModel();
					model.addElement("姓名:" + ct.getName());
					model.addElement("性别:" + ct.getSex());
					model.addElement("电话:" + ct.getPhone());
					model.addElement("类型：" + ct.getCustomerType().getName());
					model.addElement("余额:" + ct.getMoney());
					model.addElement("状态:" + ct.getCustomerState().getName());
					model.addElement("积分:" + ct.getIntegral());
					model.addElement("出生日期:" + DateUtil.getDate(ct.getBirthday()));
					model.addElement("地址:" + ct.getAddress());
					model.addElement("EMAIL:" + ct.getEmail());
					jList1.setModel(model);

					int i = JOptionPane.showConfirmDialog(null, "确定注销此客户？", null, JOptionPane.WARNING_MESSAGE,
							JOptionPane.OK_CANCEL_OPTION);
					if (i == JOptionPane.OK_OPTION) {
						if(CustomerService.logoutCustomer(ct)){
							JOptionPane.showMessageDialog(null, "客户"+ct.getName()+"注销成功!");
						}else{
							JOptionPane.showMessageDialog(null, "客户"+ct.getName()+"注销失败!");
						}
						txt_name.setText("");
						txt_userId.setText("");
					}
				}

			}
		});
		jbt_ok.setBounds(280, 231, 69, 30);
		jbt_cancle1 = new javax.swing.JButton();
		jbt_cancle1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				txt_name.setText("");
				txt_userId.setText("");
				txt_newpassword.setText("");
				DefaultListModel model = new DefaultListModel();
				jList1.setModel(model);
			}
		});
		jbt_cancle1.setBounds(519, 374, 69, 23);
		lbl_newpassword = new javax.swing.JLabel();
		lbl_newpassword.setBounds(34, 160, 72, 15);
		txt_newpassword = new javax.swing.JPasswordField();
		txt_newpassword.setBounds(116, 157, 134, 21);
		jbt_save = new javax.swing.JButton();

		jbt_save.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String userId = txt_userId.getText();
				if ("".equals(userId)) {
					JOptionPane.showMessageDialog(null, "请选择用户!");
					txt_name.setText("");
					txt_userId.setText("");
					return;
				}
				if (txt_newpassword.getText().toString().equals("")) {
					JOptionPane.showMessageDialog(null, "请设置新密码!");
					return;
				}
				Customer ct = CustomerService.query(userId);
				if (ct!=null) {
					DefaultListModel model = new DefaultListModel();
					model.addElement("姓名:" + ct.getName());
					model.addElement("性别:" + ct.getSex());
					model.addElement("电话:" + ct.getPhone());
					model.addElement("类型：" + ct.getCustomerType().getName());
					model.addElement("余额:" + ct.getMoney());
					model.addElement("状态:" + ct.getCustomerState().getName());
					model.addElement("积分:" + ct.getIntegral());
					model.addElement("出生日期:" + DateUtil.getDate(ct.getBirthday()));
					model.addElement("地址:" + ct.getAddress());
					model.addElement("EMAIL:" + ct.getEmail());
					jList1.setModel(model);
					
					if(CustomerService.bubanCustomer(ct,txt_newpassword.getText().toString())){
						JOptionPane.showMessageDialog(null, ct.getName() + "客户已经成功补办！");
					}else{
						JOptionPane.showMessageDialog(null, ct.getName() + "客户补办失败！");
					}
					txt_name.setText("");
					txt_userId.setText("");
					
				}else{
					JOptionPane.showMessageDialog(null, "该用户不存在!");
					txt_name.setText("");
					txt_userId.setText("");
					return;
				}

			}
		});
		jbt_save.setBounds(280, 156, 69, 23);
		jScrollPane1 = new javax.swing.JScrollPane();
		jScrollPane1.setBounds(422, 133, 194, 231);

		jbt_ok.setText("\u6ce8  \u9500");

		jbt_cancle1.setText("\u53d6  \u6d88");

		lbl_newpassword.setText("\u65B0  \u5BC6  \u7801\uFF1A");

		jbt_save.setText("\u8865  \u529e");
		setLayout(null);
		add(jbt_ok);
		add(jbt_cancle1);
		add(lbl_newpassword);
		add(txt_newpassword);
		add(jbt_save);
		add(jScrollPane1);
		jList1 = new javax.swing.JList();
		jScrollPane1.setViewportView(jList1);

		JPanel panel = new JPanel();
		panel.setBorder(new TitledBorder(null, "\u5F53\u524D\u9009\u62E9\u7684\u7528\u6237", TitledBorder.LEADING,
				TitledBorder.TOP, null, null));
		panel.setBounds(43, 10, 573, 101);
		add(panel);
		panel.setLayout(null);
		lbl_name = new JLabel("\u5BA2\u6237\u59D3\u540D\uFF1A");
		lbl_name.setBounds(10, 28, 80, 15);
		panel.add(lbl_name);
		txt_name = new JLabel();
		txt_name.setBounds(87, 25, 143, 18);
		panel.add(txt_name);
		lbl_password = new javax.swing.JLabel();
		lbl_password.setBounds(270, 28, 60, 15);
		panel.add(lbl_password);

		lbl_password.setText("\u4F1A\u5458ID\uFF1A");
		txt_userId = new JLabel();
		txt_userId.setBounds(340, 25, 167, 21);
		panel.add(txt_userId);
		
				button = new JButton("\u9009\u62E9\u7528\u6237");
				button.setBounds(449, 68, 93, 23);
				panel.add(button);
				button.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						if (findCustomerDialogOfLogoff == null) {
							findCustomerDialogOfLogoff = new FindCustomerDialog() {
								@Override
								public void selectUser(Customer currentUser) {
									txt_name.setText(currentUser.getName());
									txt_userId.setText(currentUser.getId() + "");
								}

							};
							findCustomerDialogOfLogoff.setModal(true);
						}
						findCustomerDialogOfLogoff.setVisible(true);
					}
				});
	}// </editor-fold>

	// GEN-END:initComponents

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JList jList1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton jbt_cancle1;
	private javax.swing.JButton jbt_ok;
	private javax.swing.JButton jbt_save;
	private javax.swing.JLabel lbl_newpassword;
	private javax.swing.JLabel lbl_password;
	private javax.swing.JPasswordField txt_newpassword;
	private JLabel txt_userId;
	private JLabel txt_name;
	private JLabel lbl_name;
	private JButton button;
	private FindCustomerDialog findCustomerDialogOfLogoff = null;
}